name: Lighthouse reports

on:
  deployment_status:

jobs:
  lighthouse:
    if: ${{ contains(github.event.deployment_status.target_url, 'heroku') && github.event.deployment_status.state == 'success'}}
    runs-on: ubuntu-latest

    container:
      image: fewlines/docker-lighthouse-puppeteer:CU-ht6h0f_35aca8af5105
      env:
        CHROME_FLAGS: "--headless --disable-gpu --no-sandbox --disable-setuid-sandbox"

    env:
      GITHUB_CONTEXT_EVENT: ${{ toJson(github.event) }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Create test user
        env:
          CONNECT_TEST_ACCOUNT_EMAIL: "lighthouse@e2e.test"
          CONNECT_TEST_ACCOUNT_PASSWORD: ${{ secrets.CONNECT_TEST_ACCOUNT_PASSWORD }}
          CONNECT_MANAGEMENT_URL: ${{ secrets.CONNECT_MANAGEMENT_URL }}
          CONNECT_MANAGEMENT_API_KEY: ${{ secrets.CONNECT_MANAGEMENT_API_KEY }}
        run: yarn e2e:create-test-user

      - name: Run Lighthouse script
        env:
          CONNECT_TEST_ACCOUNT_EMAIL: 'lighthouse_${{ github.event.deployment.sha }}@e2e.test'
          CONNECT_TEST_ACCOUNT_PASSWORD: ${{ secrets.CONNECT_TEST_ACCOUNT_PASSWORD }}
          CONNECT_TEST_ACCOUNT_URL: ${{ github.event.deployment.payload.web_url }}
          CHROME_FLAGS: "--headless --disable-gpu --no-sandbox --disable-setuid-sandbox"
        run: pwd && lighthouse-puppeteer -c "--headless --disable-gpu --no-sandbox --disable-setuid-sandbox" /__w/connect-account/connect-account/bin/e2e/lighthouse-report.js

      - name: Remove test user
        if: ${{ always() }}
        env:
          CONNECT_TEST_ACCOUNT_EMAIL: "lighthouse@e2e.test"
          CONNECT_MANAGEMENT_URL: ${{ secrets.CONNECT_MANAGEMENT_URL }}
          CONNECT_MANAGEMENT_API_KEY: ${{ secrets.CONNECT_MANAGEMENT_API_KEY }}
        run: yarn e2e:remove-test-user
