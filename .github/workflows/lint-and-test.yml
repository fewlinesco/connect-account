name: CI

on:
  pull_request:
    
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: linter
      run: yarn lint

  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: fewlines/mongo-with-replica-set:4.4.1
        ports:
          - 29705:29705
      
      container:
        image:  node:14.8-buster

    steps:
    - uses: actions/checkout@v2
    
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: test
      run: yarn test
      env:
        MONGO_URL_TEST: mongodb://mongodb:${{ job.services.mongodb.ports[29705] }}/connect-account-test
        CONNECT_TEST_ACCOUNT_EMAIL: ${{ secrets.CONNECT_TEST_ACCOUNT_EMAIL }}
        CONNECT_TEST_ACCOUNT_PASSWORD: ${{ secrets.CONNECT_TEST_ACCOUNT_PASSWORD }}
