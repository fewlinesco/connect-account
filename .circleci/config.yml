version: 2.1

parameters:
  deployed_on_heroku:
    type: boolean
    default: false
  target_url:
    type: string
    default: ""

commands: 
  install-dependencies:
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

jobs:
  lint-and-tests:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    steps:
      - install-dependencies
      - run:
          name: Launching Profile mock server
          command: docker-compose up -d profile_mock_server
      - run:
          name: Run lint
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test
          environment:
            CONNECT_PROFILE_URL: "http://localhost:29712"

  e2e-tests:
    docker: 
      - image: buildkite/puppeteer:8.0.0
    environment:
      CONNECT_TEST_ACCOUNT_URL: << pipeline.parameters.target_url >>
    steps: 
      - install-dependencies
      - run:
          name: Creating Connect test user
          command: yarn e2e:create-test-user | grep "id:" | sed "s/.*://g" | xargs -I '{}' echo "export CONNECT_TEST_ACCOUNT_SUB={}" >> $BASH_ENV
      - when: 
          condition: 
            matches: { pattern: ".*?\\bstaging\\b.*?", value: << pipeline.parameters.target_url >> }
          steps:
            - run: 
                name: Setting Connect.Profile and Connect.Account staging URL env var
                command: |
                  echo "export CONNECT_PROFILE_URL=https://fewlines-profile-staging.herokuapp.com/" >> $BASH_ENV
                  echo "export CONNECT_TEST_ACCOUNT_URL=https://account-staging.fewlines.tech/" >> $BASH_ENV
      - run:
          name: Running e2e tests
          command: CONNECT_TEST_ACCOUNT_EMAIL="taiko_${CIRCLE_SHA1}@fewlines.test" yarn test:e2e 
      - store_artifacts:
          path: ./tests/e2e/screenshots
      - when: 
          condition: 
            matches: { pattern: ".*?\\bstaging\\b.*?", value: << pipeline.parameters.target_url >> }
          steps:
            - run: 
                name: Cleaning Profile Staging
                command: yarn e2e:delete-profile-user
                when: always
      - run: 
          name: Removing Connect test user
          command: yarn e2e:remove-test-user
          when: always

  promote-to-production:
    docker:
      - image: cimg/node:14.17.0

    steps:
      - install-dependencies

      - run:
          name: Promote Heroku staging app to production
          command: yarn heroku:promote-staging-to-prod

  lighthouse:
    docker:
      - image: cimg/node:14.17.0-browsers
    environment:
      CONNECT_TEST_ACCOUNT_URL: << pipeline.parameters.target_url >>
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Connect.Account dependencies
          command: yarn install
      - run:
          name: Install Puppeteer and the Lighthouse CLI
          command: yarn add -D puppeteer @lhci/cli
      - save_cache:
          name: Save Yarn Package Cache
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - when: 
          condition: 
            matches: { pattern: ".*?\\bstaging\\b.*?", value: << pipeline.parameters.target_url >> }
          steps:
            - run: 
                name: Setting Connect.Account staging URL env var
                command: echo "export CONNECT_TEST_ACCOUNT_URL=https://account-staging.fewlines.tech/" >> $BASH_ENV
      - run:
          name: Run Lighthouse audit
          command: yarn lhci autorun
      - store_artifacts:
          path: ./lhci_reports
      - run:
          name: Comment manifest to relative GitHub PR 
          command: |
            yarn e2e:cast-json-manifest-to-html

            pr_response=$(curl --location --request GET "https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls?head=$CIRCLE_PROJECT_USERNAME:$CIRCLE_BRANCH&state=open" \
            -u $FRIEDA_GH_USER:$FRIEDA_GH_PAT)

            if [ $(echo $pr_response | jq length) -eq 0 ]; then
              echo "No PR found to update"
            else
              pr_comment_url=$(echo $pr_response | jq -r ".[]._links.comments.href")
            fi

            curl --location --request POST "$pr_comment_url" \
              -u $FRIEDA_GH_USER:$FRIEDA_GH_PAT \
              --header "Accept: application/vnd.github.v3+json" \
              --data @./html-manifest.txt

workflows:
  tests-on-push:
    when:
      not: << pipeline.parameters.deployed_on_heroku >>
    jobs:
      - lint-and-tests
  e2e-tests-after-heroku-deploy:
    when: << pipeline.parameters.deployed_on_heroku >>
    jobs: 
      - e2e-tests
      - promote-to-production:
          requires:
            - e2e-tests
          filters:
            branches:
              only:
                - main
      - lighthouse
